------------------------------------------------
    __  ___           __          ________
   /  |/  /___ ______/ /_        /  _/  _/
  / /|_/ / __ `/ ___/ __ \______ / / / /  
 / /  / / /_/ / /__/ / / /_____// /_/ /   
/_/  /_/\__,_/\___/_/ /_/     /___/___/  

Version 1.5.0
$Id$
------------------------------------------------

------------------------------------------------
 _                         
/ |_  _.._  _  _   |  _  _ 
\_| |(_|| |(_|(/_  |_(_)(_|
            _|           _|
------------------------------------------------
Bug Fixes
------------------------------------------------

* Plugin Manager Metadata Bug
Fixed bug when plugin or components that they extend have no functions inside of
the hierarchy. (2007-02-04 pfarrell)

* White Screen of Death (WSOD) When Maximum Events Is Exceeded
Fixed WSOD bug when the maximum number of events to be processed is exceeded.
Now, process the generated exception up to the maximum number of events then 
throws an error since the exception handling exceeded the maximum events for the
second time. (2007-02-08 pfarrell)

------------------------------------------------
Improvements / Enhancements
------------------------------------------------
* Include Tag Support
You can now use the includes section and include tag in your Mach II XML config file to 
dynamically included anonther configuration file. The include file is specificed using 
the file attribute of the include tag and is relative to the application root or mapping.

Example:
<mach-ii>
	<includes>
		<include file="config/mach-ii_admin.xml"/>
	</includes>
	<properties>
		...
	</properties>
</mach-ii>

The new include functionality supports includes that include other include files (i.e. 
recursive).  Also, if you try to include a file that has already been included, Mach-II
will throw an error telling you cannot do that. (2007-02-18 kwiersma)

* Redirect Persist
Added new optional attributes to the redirect command that allows you to 
persist complex datatypes across a redirect.  The new attributes are:
- persist [boolean]
Turns complex persisting on/off for this redirect.
- persistArg [comma,delimitated,list,of,event,args]
List of event arg names to persists.  If this attribute is not defined or "",
the command will persist the entire event object.

A new optional property has been added called redirectPersistParameter.  This defaults
to persistId. (2007-02-08 pfarrell)

* Redirect StatusTypes
Added new optional attribute to the redirect command to more than just http stauts 302 
redirects. The new attributes is:
- statusType [permanent|temporary|prg] defaults to temporary

Permanent = 301 http status
Temporary = 302 http status (this is what cflocation does)
PRG = 303 http status (PRG = post-redirect-get routine which is a common idiom)
(2007-02-25 pfarrell)

* Complex Properties (including structs, arrays and the new Mach-II Property CFC)
Please see the documentation for more information. (2007-02-05 pfarrell) 

* Trace Plugin
We have added better event more granular parameters to suppress trace output 
by adding a parameter that only shows debugging if ColdFusion's debugging 
mode is on. (2007-02-02 kwiersma)

* Subroutines
Added a new XML construct to support subroutines and a related command to 
execute a subroutine (2007-02-02 pfarrell)

* Auto-Resolve Placeholder as Parameter Values
Built-in auto-resolution of ${} syntax of placeholders in parameters values.
This allows you use placeholders to have dynamic parameter values. For example:

<parameter name="mode" value="${serverMode}"/>

The ${serverMode} corresponds to a property named "serverMode".  Mach-II will
automatically get the property's value at runtime and replace parameter's value
with the result of the property. (2007-02-03 pfarrell)

* Event-Bean Command
Added new optional attribute called "reinit" which defaults to true if
not defined in the command. If "reinit" is false, the even-bean command will 
not re-initialize the bean, but get it from the Event object.  This allows you
to reuse beans and repopulate, whereas the old functionality would overwrite 
the original bean and you would loose all the data contained within. This feature
enhancement is backwards compatible with 1.1.1. (2007-02-05 pfarrell)

------------------------------------------------
Interal Framework Improvements / Enhancements
------------------------------------------------

* Refactored AppManager's RequestHandler Logic Into RequestManager
Moved created and getting of RequestHandler's into the new RequestManager.
Delegated the getRequestHandler() method in AppManager to use RequestManager.
There was no API change in regards to the AppManager's getRequestHandler(), however
we removed the public utility method named createRequestHandler() from the 
AppManager since nobody *should* be calling this externally. (2007-02-19 pfarrell)

* All init() methods now Return the "this" scope instead void
(2007-02-10 pfarrell)

* Refactored all managers to method chain the init() method whe creating the object
(2007-02-25 pfarrell)

* Refactored manager's init() method into init() and loadXml() methods
Separated the loading of xml data into separate function since it called so
many times during the loading the framework due to the introduction of includes.
(2007-02-25 pfarrell)

* Version number of the framework is now hard-coded in the PropertyManager instead
of being passed up the component chain from the bootstrappers. (2007-02-10 pfarrell)